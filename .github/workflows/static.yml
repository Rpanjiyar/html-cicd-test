name: Static Site CI/CD with SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-deployment"
  cancel-in-progress: false

jobs:
  build-and-symbol-check:
    runs-on: ubuntu-latest
    outputs:
      symbol_status: ${{ steps.symbolcheck.outputs.status }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Symbol Check
        id: symbolcheck
        run: |
          output=$(node scripts/symbol-check.js 2>&1 || true)
          echo "$output"
          if echo "$output" | grep -iq "error"; then
            echo "status=FAILED" >> $GITHUB_OUTPUT
            echo "::error file=scripts/symbol-check.js::Symbol check failed:\n$output"
          else
            echo "status=PASSED" >> $GITHUB_OUTPUT
            echo "Symbol check passed."
          fi

      - name: Fix using OpenAI (if symbols failed)
        if: steps.symbolcheck.outputs.status == 'FAILED'
        run: |
          echo "Running OpenAI fix..."
          npm install openai
          node scripts/fix-symbols-with-openai.js
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Re-run Symbol Check
        if: steps.symbolcheck.outputs.status == 'FAILED'
        run: node scripts/symbol-check.js

  sonarcloud:
    needs: build-and-symbol-check
    runs-on: ubuntu-latest
    if: always()
    outputs:
      quality_gate: ${{ steps.quality-gate.outputs.quality-gate-status }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarCloud Scan (HTML files only)
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.inclusions=**/*.html

      - name: Wait for Quality Gate result
        id: quality-gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Debug Quality Gate output
        run: echo "Quality Gate Status = ${{ steps.quality-gate.outputs['quality-gate-status'] }}"

  deploy-and-notify:
    needs: sonarcloud
    runs-on: ubuntu-latest
    if: needs.sonarcloud.outputs.quality_gate == 'PASSED'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'  # Adjust if your static files are elsewhere

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Trigger Tester Repo Workflow
        run: |
          curl -X POST https://api.github.com/repos/Indra512/PlaywrightCucumberTypeScript/dispatches \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.TEST_REPO_PAT }}" \
          -d '{"event_type":"dev-completed"}'

      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: Static Site Deployed! ${{ github.event.head_commit.message }}
          to: raushan.teknotrait@gmail.com
          from: CI Bot <${{ secrets.EMAIL_USER }}>
          body: |
            Hello,

            Your static HTML site has been successfully deployed to GitHub Pages!

            ‚úÖ Commit: ${{ github.sha }}
            üïí Time: ${{ github.event.head_commit.timestamp }}
            üåê URL: ${{ steps.deployment.outputs.page_url }}

            Cheers,
            GitHub Actions
