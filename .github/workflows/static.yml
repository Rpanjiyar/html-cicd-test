name: Static Site CI/CD with SonarCloud

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-deployment"
  cancel-in-progress: false

jobs:
  symbol-check:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check-symbols.outputs.status }}
      error: ${{ steps.check-symbols.outputs.error }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run symbol check
        id: check-symbols
        run: |
          output=$(python3 symbol_check.py 2>&1)
          status="PASSED"
          error=""
          if echo "$output" | grep -i "error"; then
            status="FAILED"
            error="$output"
          fi
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "error<<EOF" >> $GITHUB_OUTPUT
          echo "$error" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  manual-approval-if-needed:
    needs: symbol-check
    runs-on: ubuntu-latest
    if: needs.symbol-check.outputs.status == 'FAILED'
    outputs:
      approved: ${{ steps.approve.outputs.approved }}
    steps:
      - name: Display errors from symbol_check.py
        run: |
          echo "${{ needs.symbol-check.outputs.error }}"

      - name: Wait for manual approval to continue
        id: approve
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          prompt: "Symbol check found issues. Approve to continue to SonarCloud?"
          approvers: alokbansal
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud:
    needs: [symbol-check, manual-approval-if-needed]
    if: |
      needs.symbol-check.outputs.status == 'PASSED' ||
      needs.manual-approval-if-needed.outputs.approved == 'true'
    runs-on: ubuntu-latest
    outputs:
      quality_gate: ${{ steps.quality-gate.outputs['quality-gate-status'] }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          args: >
            -Dsonar.projectKey=your_project_key
            -Dsonar.organization=your_organization
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.html
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Wait for Quality Gate result
        id: quality-gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Debug Quality Gate output
        run: echo "Quality Gate Status = ${{ steps.quality-gate.outputs['quality-gate-status'] }}"

  deploy-and-notify:
    needs: sonarcloud
    runs-on: ubuntu-latest
    if: needs.sonarcloud.outputs.quality_gate == 'PASSED'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload static site
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'  # root directory with your static HTML files

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Trigger Tester Repo Workflow
        run: |
          curl -X POST https://api.github.com/repos/Indra512/PlaywrightCucumberTypeScript/dispatches \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.TEST_REPO_PAT }}" \
          -d '{"event_type":"dev-completed"}'

      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: Static Site Deployed! ${{ github.event.head_commit.message }}
          to: raushan.teknotrait@gmail.com
          from: CI Bot <${{ secrets.EMAIL_USER }}>
          body: |
            Hello,

            Your static HTML site has been successfully deployed to GitHub Pages!

            ‚úÖ Commit: ${{ github.sha }}
            üïí Time: ${{ github.event.head_commit.timestamp }}
            üåê URL: ${{ steps.deployment.outputs.page_url }}

            Cheers,
            GitHub Actions
